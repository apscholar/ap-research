[
["data-programming.html", "Data Programming 5.4 R 5.5 Cleaning and Reshaping Data 5.6 Regular Expressions", " Data Programming 5.4 R R To download R, choose a CRAN mirror closest to your geographic location. In order to build R packages, you should also download the latest recommended version of Rtools. Currently, the latest recommended version is Rtoools35.exe. During the installation of Rtools, you may need to add in \"C:\\Rtools\\mingw_64\\bin;\" to the path. R Studio R Studio is an integrated development environment (IDE) for R. After downloading R Studio, you should be able to type the following command at the console to download some common R packages for data analysis and visualization. install.packages(c(&quot;dplyr&quot;, &quot;tidyr&quot;, &quot;ggplot2&quot;, &quot;esquisse&quot;, &quot;stats&quot;, &quot;xtable&quot;)) R Search Engine 5.5 Cleaning and Reshaping Data library(reshape2) library(tidyr) library(xtable) library(stringr) library(knitr) options(kableExtra.latex.load_packages = FALSE) library(kableExtra) library(pander) #original data is organized by id/trial (two locations per entry) game &lt;- data.frame(id = c(rep(&quot;X&quot;,3), rep(&quot;Y&quot;,3), rep(&quot;Z&quot;,3)), trial = rep(c(1,2,3), 3), location_A = round(rnorm(9, mean = 0, sd = 1), 1), location_B = round(rnorm(9, mean = 0, sd = 1), 1)) # reshape data from wide to long (each entry is unique by id/trial/location) game_long &lt;- melt(game, id = c(&quot;id&quot;,&quot;trial&quot;), value.name = &quot;score&quot;) game_long$variable &lt;- str_sub(game_long$variable,-1,-1) colnames(game_long)[3] &lt;- &quot;location&quot; # reshape data back to wide (same as original data) game_wide &lt;- dcast(game_long, id + trial ~ location, value.var = &quot;score&quot;) # reshape data into even wider form (one entry per id with 6 value columns: 2 locations X 3 trials) game_wider &lt;- dcast(game_long, id ~ location + trial, value.var = &quot;score&quot;) # using tidyr and dplyr to reshape data game_long2 &lt;- game %&gt;% gather(label, score, location_A, location_B) %&gt;% separate(label, c(&quot;label_p1&quot;,&quot;location&quot;), sep = &quot;_&quot;) %&gt;% dplyr::select(-label_p1) game_wide2 &lt;- game_long2 %&gt;% spread(location, value = score) #unite() function creates the location X trial combinations first in long format # then apply the spread() function to reshape into wide format #just like in game_wide, each entry in game_wide2 is unique by id game_wider2 &lt;- game_long2 %&gt;% unite(location_trial, location, trial) %&gt;% spread(location_trial, value = score) #xtable method #print(xtable(game, caption = &quot;Wide Data Listed by Person/Trial (Scores by Location)&quot;), type=&quot;html&quot;) #kable method #kable(game, caption = &quot;Wide Data Listed by Person/Trial (Scores by Location)&quot;, booktabs = TRUE) %&gt;% # kable_styling(latex_options = c(&quot;hold_position&quot;)) #pander method (most flexible) pandoc.table(game, caption = &quot;(\\\\#tab:wide) Wide Data Listed by Person/Trial (Scores by Location)&quot;) Table 5.1: Wide Data Listed by Person/Trial (Scores by Location) id trial location_A location_B X 1 -0.4 1 X 2 1.3 -0.3 X 3 0.9 0.4 Y 1 -1.2 -1.4 Y 2 -1.7 2.1 Y 3 -2.1 -0.6 Z 1 -0.3 0.3 Z 2 0.4 -0.6 Z 3 -0.6 0.7 pandoc.table(game_wider, caption = &quot;(\\\\#tab:wider) Wider Data Listed by ID (Scores by Location/Trial)&quot;) Table 5.2: Wider Data Listed by ID (Scores by Location/Trial) id A_1 A_2 A_3 B_1 B_2 B_3 X -0.4 1.3 0.9 1 -0.3 0.4 Y -1.2 -1.7 -2.1 -1.4 2.1 -0.6 Z -0.3 0.4 -0.6 0.3 -0.6 0.7 pandoc.table(game_long, caption = &quot;(\\\\#tab:long) Long Data&quot;) Table 5.3: Long Data id trial location score X 1 A -0.4 X 2 A 1.3 X 3 A 0.9 Y 1 A -1.2 Y 2 A -1.7 Y 3 A -2.1 Z 1 A -0.3 Z 2 A 0.4 Z 3 A -0.6 X 1 B 1 X 2 B -0.3 X 3 B 0.4 Y 1 B -1.4 Y 2 B 2.1 Y 3 B -0.6 Z 1 B 0.3 Z 2 B -0.6 Z 3 B 0.7 Data Wrangling with dplyr and tidyr 5.6 Regular Expressions Regular Expressions in R UC Business Analytics R Programming Guide: Dealing with Regular Expressions Basic Regular Expressions in R Cheat Sheet "],
["literate-programming.html", "Literate Programming 5.7 LaTeX 5.8 Beamer 5.9 knitr (R + LaTeX) 5.10 R Markdown 5.11 R Bookdown 5.12 Rmd to MS Word", " Literate Programming 5.7 LaTeX MiKTeX First, download MiKTeX. Choose the version corresponding to your operating system (Windows, Mac, or Linux). Skip this step if you decide to use ShareLaTeX, which is an online LaTeX editor and does not require your computer to have underlying LaTeX packages via MiKTeX. Recommended, download the basic installer, which will download other uninstalled packages on the fly on an as-needed basis. If you want to download all packages, you can choose the Net Installer, but this may take up a lot of space. Review of LaTeX Editors Overleaf/ShareLaTeX TeXstudio LyX LaTeX Guides LaTeX Cheat Sheet Q and A: Reference File in Parent Folder 5.8 Beamer Beamer is a LaTeX class for presentations. 5.9 knitr (R + LaTeX) Using knitr in LyX Configure Texstudio to use knitr Create LaTeX Tables with kable To avoid a incompatibility warning about the LaTeX xcolor package, place options(kableExtra.latex.load_packages = FALSE) in your R chunk before library(kableExtra). See Hao Zhuâ€™s explanation in page 4 of the link above. kableExtra Vignettes vignettes for using outputting tables from R into HTML, LaTeX, and Word xtable and stargazer Examples pander Tutorial 5.10 R Markdown Markdown Reference R Markdown Cheat Sheet Writing a Reproducible Paper in R Markdown 5.11 R Bookdown Authoring Books with R Bookdown R Markdown: The Definitive Guide Writing Thesis with Bookdown Section on outputting into Microsoft Word using bookdown::preview_chapter() Writing Academic Papers with R Markdown 5.12 Rmd to MS Word Rmd to docx Discussion on Using knitr for Word output "],
["version-control.html", "Version Control 5.13 Github", " Version Control Git 5.13 Github 3 Parts of Version Control Working Directory: This is the folder where you store your files (e.g., C:\\Home\\hw1) Staging Area: Every time you make changes to your files, you need to stage the files. This tells git that these files are ready Repository: Every working directory that uses git for version control will have a .git folder, which records info about each version of the working directory. Basic git commands: git --version Check version of git git config --global user.name &quot;John Doe&quot; git config --global user.email &quot;johndoe@example.com&quot; Configure git to recognize you git config --global user.name git config --global user.email Confirm that user name/e-mail are configured git init touch readme.md git add readme.md git commit -m &quot;added readme file&quot; Initialize new repository If you are at the file path C:\\Home\\hw1, git init will initialize the repository in the hw1 folder An invisible .git folder will be created in the hw1 folder to track files. If you are at the file path C:\\Home and have not created the hw1 folder, then you can type git init hw1, which will create the hw1 folder and initialize the repo. The code above did the following: git init: initialize repository touch readme.md: added a blank readme Markdown file git add readme.md: staged readme.md (this tells git that you are ready to commit this file to the repo) git commit -m \"added readme file\": committed changed to the repo (-m allows us to add a message) git diff Check differences between in the staging area and working directory. Output: difference between each file that has changed since you last staged files (git add) If you have staged all files, this command will output nothing, since nothing is different between your working directory and staging area. git diff --staged Check the differences between staging area and repository. git log See list of commits. git reset file1.md Suppose file1.md was staged, but I want to remove it from the staging area. Now, file1.md will be untracked. git remote add origin https://github.com/&lt;username&gt;/&lt;repo-name&gt;.git git push -u origin master Create a new repository in Github. Link your local working directory with the Github repo with these commands. git remote add: sends commits to the location origin We associated origin as a shortcut for the Github repo https://github.com/&lt;username&gt;/&lt;repo-name&gt;.git. git push -u origin master Send master branch to remote repo called origin Option -u allows us to use git push as a shortcut for git push origin master in the future Best Practices Using Github in RStudio Tutorial on Git for Behavioral Sciences Github and R "]
]
